package com.ankush.thingspeaks.ThingsSpeaks.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ankush.thingspeaks.ThingsSpeaks.dao.DataDao;
import com.ankush.thingspeaks.ThingsSpeaks.entities.DataObj;

@Service
public class DataServiceImplementation implements DataService{

	// List<DataObj> list;
	
	@Autowired
	private DataDao dataDao;
	
	
	
	public DataServiceImplementation() {
		
//		  list = new ArrayList<DataObj>();
//		  
//		  List<Integer> li = new ArrayList<>(); 
//		  li.add(12); li.add(20); li.add(50);
//		  
//		  List<Integer> li1 = new ArrayList<>();
//		  li1.add(100); li1.add(400);
//		  li1.add(500);
//		  
//		  
//		  list.add(new DataObj(li,li1,123)); 
//		  list.add(new DataObj(li1,li,116));
//		 
	}




	@Override
	public List<DataObj> getAllObj() {
		
		
		return dataDao.findAll();
		//return list;
		
	}




	@Override
	public DataObj getObj(int Uid) {
		
//		DataObj re=null;
//		for(DataObj obj : list)
//		{
//			if(obj.getUid() == Uid)
//			{
//				re=obj; break;	
//			}
//		}
//		
//		return re;
//		
			
			return dataDao.getById(Uid);
	}




	@Override
	public DataObj addField(DataObj data) {
		
		list.add(data);

		return data;
	}




	@Override
	public String getField(int Uid) {
		DataObj i=null;
		for(DataObj obj : list)
		{
			if(obj.getUid() == Uid) {
				i=obj; break;
			}
		}
		
			list.remove(i);

		return "Delete successfully";
	}




	@Override
	public DataObj updateField(DataObj data) {
		
		DataObj c=null;
		
		for(DataObj o:list)
		{
			if(o.getUid() == data.getUid())
			{
				c=o; break;
 			}
		}
		
		int i=list.indexOf(c);

		list.set(i,data);
		return data;
	}




	

}
